name: CI/CD Deployment Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install & Build
        run: |
          npm ci
          npm run build
          zip -r build.zip .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  deploy-dev:
    name: Deploy to Dev
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
      - name: Release Dev Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          gh release create "$TAG" build.zip --notes "$NOTE"

  deploy-staging:
    name: Deploy to Staging
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
      - name: Release Staging Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          gh release create "$TAG" build.zip --notes "$NOTE"

  deploy-production:
    name: Deploy to Production (requires approval)
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
      - name: Release Production Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          gh release create "$TAG" build.zip --notes "$NOTE"
